<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>btn_dpad</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xdir = 0
ydir = 0
lock = false

image_xscale = 2
image_yscale = 2

x = (room_width / 3) * 2
y = (room_height / 3) * 2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if(instance_exists(player))
{
    x = player.x
    y = player.y
}


if(device_mouse_check_button(0, mb_left)){
 
    angle = arctan2(x - device_mouse_x(0), y - device_mouse_y(0))
    //show_message(string(angle))
    
    
    
    if(angle &gt; -6 * (pi/6) &amp;&amp; angle &lt; -5 * (pi/6))
    {
        xdir = 0
        ydir = 1
    }else if(angle &gt; -5 * (pi/6) &amp;&amp; angle &lt; -4 * (pi/6))
    {
        xdir = 1
        ydir = 1
    }else if(angle &gt; -4 * (pi/6) &amp;&amp; angle &lt; -2 * (pi/6))
    {
        xdir = 1
        ydir = 0
    }else if(angle &gt; -2 * (pi/6) &amp;&amp; angle &lt; -pi/6)
    {
        xdir = 1
        ydir = -1
    }else if(angle &gt; -pi/6 &amp;&amp; angle &lt; pi/6)
    {
        xdir = 0
        ydir = -1
    }else if(angle &gt;  pi/6 &amp;&amp; angle &lt;  2 * (pi/6))
    {
        xdir = -1
        ydir = -1
    }else if(angle &gt;  2 * (pi/6) &amp;&amp; angle &lt;  4 * (pi/6))
    {
        xdir = -1
        ydir = 0
    }else if(angle &gt;  4 * (pi/6) &amp;&amp; angle &lt;  5 * (pi/6))
    {
        xdir = -1
        ydir = 1
    }else if(angle &gt;  5 * (pi/6) &amp;&amp; angle &lt;  6 * (pi/6))
    {
        xdir = 0
        ydir = 1
    }

}else{
    xdir = 0
    ydir = 0
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
