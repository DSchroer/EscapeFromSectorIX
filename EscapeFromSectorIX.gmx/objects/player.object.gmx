<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///variables
instance_create(x,y,player_spawn)

mv_speed = 5

nx_x = x
nx_y = y
nx_x_p = x
nx_y_p = y

walk_v = 0 //variable used for walking animation

//Animation variables
FOOT_ANGLE = 0
FOOT_2_ANGLE = 0
HEAD_ANGLE = 0

dead = false

create_ui()

EYE_COLOR = game_level.col

if(room &gt; game_level.level)
    game_level.level = room
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Make local variable holder

instance_create(0,0,local_container)
instance_create(0,0,TouchControlPad)

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set move

if(instance_exists(textPrompt))
    return 0;

move = false
if(nx_x == x &amp;&amp; nx_y == y)
{
    if(instance_exists(TouchControlPad))
    {
       nx_y += TouchControlPad.ydir * 32
       nx_x += TouchControlPad.xdir * 32
    }
    
    if(keyboard_check(vk_up) || keyboard_check(ord("W")))
    {
        nx_y -= 32
    }
        
    if(keyboard_check(vk_down) || keyboard_check(ord("S")))
    {
        nx_y += 32
    }
        
    if(keyboard_check(vk_left) || keyboard_check(ord("A")))
    {
        nx_x -= 32
    }
        
    if(keyboard_check(vk_right) || keyboard_check(ord("D")))
    {
        nx_x += 32
    }
            
    move = true
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check box

xhit = false
yhit = false
if(move)
{
    t = collision_point(nx_x,nx_y,crate,true,true)
    if(t)
    {
        xp = nx_x - x
        yp = nx_y - y
 
        with(t)
        {
            push = push_crate(other.xp,other.yp)
 
            if(push)
            {
                other.nx_x = other.x
                other.nx_y = other.y
                other.move = false
            }
        }
    }
}




</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///check for wall

xhit = false
yhit = false
if(move)
{

    if(collision_line(x,y,nx_x,nx_y,wall,true,true))
    {
        if(collision_point(nx_x,y,wall,true,true))
        {
            nx_x = x
            xhit = true
        }
        
        if(collision_point(x,nx_y,wall,true,true))
        {
            nx_y = y
            yhit = true
        }
        
        if(!yhit &amp;&amp; !xhit)
        {
            ch = false
            if(nx_x_p == x)
            {
               nx_y = y
               ch = true
            }
            
            if(nx_y_p == y)
            {
                nx_x = x
                ch = true
            }
            
            if(!ch)
            {
                nx_x = x
                nx_y = y
            }
        } 
        
        
    }
     nx_x_p = x
     nx_y_p = y
}


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///play walk audio

if(nx_x != x || nx_y != y)
{
    if(!audio_is_playing(walk))
    {
        audio_play_sound(walk,2,false);
    }
    walk_v += 5 //increase this incrimentation for faster walk animation
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///move

if(nx_x &gt; x)
{
    if(nx_x - x &gt; mv_speed)
    {
        x += mv_speed
    }else{
        x = nx_x
    }
}else if(nx_x &lt; x)
{
    if(x - nx_x &gt; mv_speed)
    {
        x -= mv_speed
    }else{
        x = nx_x
    }
}

if(nx_y &gt; y)
{
    if(nx_y - y &gt; mv_speed)
    {
        y += mv_speed
    }else{
        y = nx_y
    }
}else if(nx_y &lt; y)
{
    if(y - nx_y &gt; mv_speed)
    {
        y -= mv_speed
    }else{
        y = nx_y
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rotate sprite
if(x != xprevious || y != yprevious)
    image_angle = (180.0 / pi) *  arctan2(xprevious - x,yprevious - y)


</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Test death
if(dead)
{   
//reset boxes
    with(crate)
    {
        x = xstart;
        y = ystart;
        d_x = x;
        d_y = y;
    }
    
    audio_play_sound(laser_kill,2,false);
    
    instance_create(x,y,blood)

    local_container.deaths++;
    x = xstart;
    y = ystart;
    nx_x = xstart;
    nx_y = ystart;
    dead = false;
    
    if(instance_exists(pickup))
    {
        with(pickup)
        {
            visible = true;
        }
    }
    
    instance_create(x,y,player_spawn)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update animation variables

player_update_animation()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="27">
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>MainMenu</room>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw feet
draw_sprite_ext(spr_player_feet,0,x,y,image_xscale,image_yscale,FOOT_ANGLE,EYE_COLOR,1)
draw_sprite_ext(spr_player_feet2,0,x,y,image_xscale,image_yscale,FOOT_2_ANGLE,EYE_COLOR,1)

//draw head
draw_sprite_ext(image_index,0,x,y,image_xscale,image_yscale,HEAD_ANGLE,EYE_COLOR,1)

//draw eyes glow
draw_set_blend_mode(bm_add)
draw_sprite_ext(spr_playerEyesGlow,0,x,y,image_xscale,image_yscale,HEAD_ANGLE,EYE_COLOR,0.2)
draw_set_blend_mode(bm_normal)


    
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>16,16</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
